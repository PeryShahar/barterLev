generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String         @id @default(cuid())
  name              String?
  email             String?        @unique
  emailVerified     DateTime?
  image             String?
  give              String?
  receive           String?
  country           String?
  city              String?
  personal_info     String?
  birth_year        String?
  accounts          Account[]
  sessions          Session[]
  user1Conversation Conversation[] @relation("user1")
  user2Conversation Conversation[] @relation("user2")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Conversation {
  id       String    @id @default(cuid())
  user1    User      @relation(fields: [user1Id], references: [id], name: "user1")
  user1Id  String
  user2    User      @relation(fields: [user2Id], references: [id], name: "user2")
  user2Id  String
  messages Message[]
}

model Message {
  id             String        @id @default(uuid())
  content        String
  senderId       String
  createdAt      DateTime      @default(now())
  Conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?
}
